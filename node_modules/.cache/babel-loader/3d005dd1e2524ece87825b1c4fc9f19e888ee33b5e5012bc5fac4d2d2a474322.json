{"ast":null,"code":"var _jsxFileName = \"/Users/subash/Desktop/FoodieWeb/src/HotelList.jsx\",\n  _s = $RefreshSig$();\n// src/HotelList.js\nimport React, { useState, useEffect } from 'react';\nimport './HotelList.css'; // Import the CSS file for styling\nimport HotelDetailsModal from './HotelDetailsModal';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'https://food-app-be-sequelize.onrender.com';\nconst HotelList = () => {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [countsDetails, setCountDetails] = useState({});\n  const [selectedHotel, setSelectedHotel] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filteredHotels, setFilteredHotels] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Fetch hotels data from the API\n  const fetchHotels = async () => {\n    try {\n      setLoading(true); // Start loading\n      const response = await fetch(`${baseUrl}/gethotels`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setHotels(data);\n      setFilteredHotels(data); // Set filtered hotels initially to all hotels\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Fetch count data from the API\n  const fetchCount = async userMobileNumber => {\n    try {\n      setLoading(true); // Start loading\n      let url = userMobileNumber === '' ? `${baseUrl}/count` : `${baseUrl}/count/${userMobileNumber}`;\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setCountDetails(data);\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  useEffect(() => {\n    fetchCount('');\n    fetchHotels();\n  }, []);\n\n  // Handle search input change\n  // Handle search input change\n  const handleSearchChange = event => {\n    const searchValue = event.target.value;\n    setSearchTerm(searchValue);\n    if (searchValue.trim() === '') {\n      // If search term is cleared, fetch hotels from API\n      fetchCount('');\n      fetchHotels();\n    } else {\n      var _searchValue$trim;\n      if ((searchValue === null || searchValue === void 0 ? void 0 : (_searchValue$trim = searchValue.trim()) === null || _searchValue$trim === void 0 ? void 0 : _searchValue$trim.length) === 10) {\n        fetchCount(searchValue === null || searchValue === void 0 ? void 0 : searchValue.trim());\n      }\n      // Filter hotels based on the search term and selected date\n      filterHotels(searchValue, selectedDate);\n    }\n  };\n\n  // Handle date change\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    if (date === null) {\n      fetchHotels();\n    } else {\n      // Filter hotels based on the search term and selected date\n      filterHotels(searchTerm, date);\n    }\n  };\n\n  // Function to filter hotels by userMobileNumber and vlogPostDate\n  const filterHotels = (searchValue, date) => {\n    const filtered = hotels.filter(hotel => {\n      const matchesSearch = hotel.userMobileNumber.includes(searchValue);\n      const matchesDate = date ? new Date(hotel.createdDate).toDateString() === date.toDateString() : true;\n      return matchesSearch && matchesDate;\n    });\n    setHotels(filtered);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedHotel(null);\n  };\n  const handleHotelSelect = hotel => {\n    // Mock fetching details for selected hotel\n    setSelectedHotel(hotel);\n    setShowModal(true);\n  };\n  const handleApprove = hotelId => {\n    // Approve logic can go here\n    console.log(`Hotel with ID ${hotelId} approved.`);\n    alert(`Hotel with ID ${hotelId} approved.`);\n  };\n  const handleReject = hotelId => {\n    // Approve logic can go here\n    console.log(`Hotel with ID ${hotelId} approved.`);\n    alert(`Hotel with ID ${hotelId} approved.`);\n  };\n\n  // Display loading indicator if data is being fetched\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Display error message if an error occurs\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Compute counts\n  const totalData = hotels.length;\n  const verifiedData = hotels.filter(hotel => hotel.verified).length;\n  const validData = hotels.filter(hotel => hotel.valid).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hotel-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotel List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Mobile Number\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: selectedDate,\n        onChange: handleDateChange,\n        dateFormat: \"yyyy-MM-dd\",\n        isClearable: true,\n        placeholderText: \"Filter by Date\",\n        className: \"date-picker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total Data: \", totalData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"approved-count\",\n          children: [\"Verified Data: \", verifiedData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"approved-count\",\n          children: [\"Valid Data: \", validData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"hotel-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DataEntry Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Map Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vlog Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"View Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Post Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.userMobileNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            onClick: () => {\n              handleHotelSelect(hotel);\n            },\n            children: hotel.hotelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.hotelAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.hotelCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.hotelRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.hotelPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: hotel.hotelMapLocationLink,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"View on Map\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: hotel.hotelVlogVideoLink,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Watch Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.vlogVideoViewCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: hotel.vlogPostDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !hotel.verified && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"approve-button\",\n              onClick: () => handleApprove(hotel.hotelId),\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: !hotel.verified && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reject-button\",\n              onClick: () => handleReject(hotel.hotelId),\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)]\n        }, hotel.hotelId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotelDetailsModal, {\n      show: showModal,\n      onClose: handleCloseModal,\n      hotelDetails: selectedHotel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(HotelList, \"u5EdAv9cBUIJhFHUQ60PshKislQ=\");\n_c = HotelList;\nexport default HotelList;\nvar _c;\n$RefreshReg$(_c, \"HotelList\");","map":{"version":3,"names":["React","useState","useEffect","HotelDetailsModal","DatePicker","jsxDEV","_jsxDEV","baseUrl","HotelList","_s","hotels","setHotels","countsDetails","setCountDetails","selectedHotel","setSelectedHotel","showModal","setShowModal","loading","setLoading","error","setError","filteredHotels","setFilteredHotels","searchTerm","setSearchTerm","selectedDate","setSelectedDate","fetchHotels","response","fetch","ok","Error","data","json","message","fetchCount","userMobileNumber","url","handleSearchChange","event","searchValue","target","value","trim","_searchValue$trim","length","filterHotels","handleDateChange","date","filtered","filter","hotel","matchesSearch","includes","matchesDate","Date","createdDate","toDateString","handleCloseModal","handleHotelSelect","handleApprove","hotelId","console","log","alert","handleReject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalData","verifiedData","verified","validData","valid","type","placeholder","onChange","selected","dateFormat","isClearable","placeholderText","map","onClick","hotelName","hotelAddress","hotelCity","hotelRating","hotelPhone","href","hotelMapLocationLink","rel","hotelVlogVideoLink","vlogVideoViewCount","vlogPostDate","show","onClose","hotelDetails","_c","$RefreshReg$"],"sources":["/Users/subash/Desktop/FoodieWeb/src/HotelList.jsx"],"sourcesContent":["// src/HotelList.js\nimport React, { useState, useEffect } from 'react';\nimport './HotelList.css'; // Import the CSS file for styling\nimport HotelDetailsModal from './HotelDetailsModal';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst baseUrl = 'https://food-app-be-sequelize.onrender.com';\n\nconst HotelList = () => {\n  const [hotels, setHotels] = useState([]);\n  const [countsDetails, setCountDetails] = useState({});\n  const [selectedHotel, setSelectedHotel] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [filteredHotels, setFilteredHotels] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Fetch hotels data from the API\n    const fetchHotels = async () => {\n        try {\n            setLoading(true); // Start loading\n            const response = await fetch(`${baseUrl}/gethotels`);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setHotels(data);\n            setFilteredHotels(data); // Set filtered hotels initially to all hotels\n            setError(null); // Clear any previous errors\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setLoading(false); // Stop loading\n        }\n    };\n\n  // Fetch count data from the API\n    const fetchCount = async (userMobileNumber) => {\n        try {\n            setLoading(true); // Start loading\n            let url = userMobileNumber === '' ? `${baseUrl}/count` : `${baseUrl}/count/${userMobileNumber}`;\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setCountDetails(data);\n            setError(null); // Clear any previous errors\n        } catch (error) {\n            setError(error.message);\n        } finally {\n            setLoading(false); // Stop loading\n        }\n    };\n\n    useEffect(() => {\n        fetchCount('');\n        fetchHotels();\n    }, []);\n\n    // Handle search input change\n    // Handle search input change\n    const handleSearchChange = (event) => {\n        const searchValue = event.target.value;\n        setSearchTerm(searchValue);\n\n        if (searchValue.trim() === '') {\n            // If search term is cleared, fetch hotels from API\n            fetchCount('');\n            fetchHotels();\n        } else {\n            if (searchValue?.trim()?.length === 10) {\n                fetchCount(searchValue?.trim());\n            }\n            // Filter hotels based on the search term and selected date\n            filterHotels(searchValue, selectedDate);\n        }\n    };\n\n    // Handle date change\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        if (date === null) {\n            fetchHotels();\n        } else {\n            // Filter hotels based on the search term and selected date\n            filterHotels(searchTerm, date);\n        }\n    };\n\n    // Function to filter hotels by userMobileNumber and vlogPostDate\n    const filterHotels = (searchValue, date) => {\n        const filtered = hotels.filter((hotel) => {\n            const matchesSearch = hotel.userMobileNumber.includes(searchValue);\n            const matchesDate = date ? new Date(hotel.createdDate).toDateString() === date.toDateString() : true;\n            \n            return matchesSearch && matchesDate;\n        });\n\n        setHotels(filtered);\n    };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedHotel(null);\n  };\n\n  const handleHotelSelect = (hotel) => {\n    // Mock fetching details for selected hotel\n    setSelectedHotel(hotel);\n    setShowModal(true);\n  };\n\n  const handleApprove = (hotelId) => {\n    // Approve logic can go here\n    console.log(`Hotel with ID ${hotelId} approved.`);\n    alert(`Hotel with ID ${hotelId} approved.`);\n  };\n\n  const handleReject = (hotelId) => {\n    // Approve logic can go here\n    console.log(`Hotel with ID ${hotelId} approved.`);\n    alert(`Hotel with ID ${hotelId} approved.`);\n  };\n\n  // Display loading indicator if data is being fetched\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  // Display error message if an error occurs\n  if (error) {\n    return <div className=\"error-message\">Error: {error}</div>;\n  }\n\n  // Compute counts\n  const totalData = hotels.length;\n  const verifiedData = hotels.filter(hotel => hotel.verified).length;\n  const validData = hotels.filter(hotel => hotel.valid).length;\n\n  return (\n    <div className=\"hotel-list-container\">\n      <h1>Hotel List</h1>\n\n      {/* Search and Date Filter */}\n      <div className=\"filter-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by Mobile Number\"\n          value={searchTerm}\n          onChange={handleSearchChange}\n          className=\"search-input\"\n        />\n        <DatePicker\n          selected={selectedDate}\n          onChange={handleDateChange}\n          dateFormat=\"yyyy-MM-dd\"\n          isClearable\n          placeholderText=\"Filter by Date\"\n          className=\"date-picker\"\n          \n        />\n        <div className=\"stats\">\n            <span>Total Data: {totalData}</span>\n            <span className='approved-count'>Verified Data: {verifiedData}</span>\n            <span className='approved-count'>Valid Data: {validData}</span>\n        </div>\n      </div>\n\n      <table className=\"hotel-table\">\n        <thead>\n          <tr>\n            <th>DataEntry Number</th>\n            <th>Name</th>\n            <th>Address</th>\n            <th>City</th>\n            <th>Rating</th>\n            <th>Phone</th>\n            <th>Map Location</th>\n            <th>Vlog Video</th>\n            <th>View Count</th>\n            <th>Post Date</th>\n            <th>Approve</th>\n            <th>Reject</th>\n          </tr>\n        </thead>\n        <tbody>\n          {hotels.map((hotel) => (\n            <tr key={hotel.hotelId}>\n                <td>{hotel.userMobileNumber}</td>\n              <td onClick={() => {handleHotelSelect(hotel)}}>{hotel.hotelName}</td>\n              <td>{hotel.hotelAddress}</td>\n              <td>{hotel.hotelCity}</td>\n              <td>{hotel.hotelRating}</td>\n              <td>{hotel.hotelPhone}</td>\n              <td>\n                <a href={hotel.hotelMapLocationLink} target=\"_blank\" rel=\"noopener noreferrer\">View on Map</a>\n              </td>\n              <td>\n                <a href={hotel.hotelVlogVideoLink} target=\"_blank\" rel=\"noopener noreferrer\">Watch Video</a>\n              </td>\n              <td>{hotel.vlogVideoViewCount}</td>\n              <td>{hotel.vlogPostDate}</td>\n                <td>\n                    {!hotel.verified && <button className=\"approve-button\" onClick={() => handleApprove(hotel.hotelId)}>Approve</button>}\n                </td>\n                <td>\n                    {!hotel.verified && <button className=\"reject-button\" onClick={() => handleReject(hotel.hotelId)}>Reject</button>}\n                </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n\n      {/* Modal for showing hotel details */}\n      <HotelDetailsModal\n        show={showModal}\n        onClose={handleCloseModal}\n        hotelDetails={selectedHotel}\n      />\n    </div>\n  );\n};\n\nexport default HotelList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}